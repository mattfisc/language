
Usage	Notation
----------------
definition	=
concatenation	,
termination	;
alternation	|
optional	[ ... ]
repetition	{ ... }
grouping	( ... )
terminal string	" ... "
terminal string	' ... '
comment	(* ... *)
special sequence	? ... ?
exception	-
----------------------------------------------------

<arithmetic-operator> : '+'|'-'|'*'|'/'|'**'
<relational-operator> : '>'|'<'|'>='|'<='|'=='|'!='
<logical-operator> : '&&' | '||'

<type> : 'int'|'double'
<digit> : '0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'|'8'|'9'
<number> : ['-']<digit>[<number>]
string = '"' , { all_characters - '"' }, '"' ;


<letter> : 'a'|'b'|'c'|'d'|'e'|'f'|'g'|'h'|'i'|'j'|'k'|'l'|
'm'|'n'|'o'|'p'|'q'|'r'|'s'|'t'|'u'|'v'|'w'|'x'|'y'|'z'|
'A'|'B'|'C'|'D'|'E'|'F'|'G'|'H'|'I'|'J'|'K'|'L'|'M'|
'N'|'O'|'P'|'Q'|'R'|'S'|'T'|'U'|'V'|'W'|'X'|'Y'|'Z'

<symbol> : "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">"
    | "'" | '"' | "=" | "|" | "." | "," | ";" ;

<underline> : '_'

<first-char> : <letter>|<underline>
<all_characters> : <letter>|<symbol>|<underline>|<number>

<variable>:<first-char>{<all_characters>}......................................
<white_space> : ' '| '\n'


<line-terminator> : ';'
<if> : 'if'
<else> : 'else'
<assignment-token> : '='

<type-declaration> : <type>,<variable>
<term> : <number>|<variable>		

<arithmetic-expression> : <type-declaration>|<term>,<arithmetic-operator>,<term>[<arithmetic-operator>,<term>] 
<relational-expression> : <term>,<relational-operator>['!',<variable>]|<term>[<logical-operator><relational-expression>]

<type-declaration-statement> : <type-declaration>|<variable>[<assignment-token><term>]
<assignment-statement> : <variable><assignment-token><term>

<if-statement> : <if>,'(',<relational-expression>,')','{'<block>'}',[<else> '{'<block>'}'] 

<statement> : (<type-declaration-statement>|<assignment-statement><line-terminator>)|<if-statement>

<block> : <statement>[<block>]

<program> : 'PROGRAM', <white_space>, <variable>, <white_space>, 
            'BEGIN', <white_space>, 
            <block>[<block>],<white_space>, 
            'END'


------------------------- do i need to do something like this
<left> = <variable> ;
<right> = <identifier>
     | <terminal>
     | "[" , <rhs> , "]"
     | "{" , <rhs> , "}"
     | "(" , <rhs> , ")"
     | <rhs> , "|" , <rhs>
     | <rhs> , "," , <rhs> ;

<rule> = <lhs> , "=" , <rhs> , ";" ;
<grammar> = '{', <rule>, '}', ';'

